// ------------------------------------------------------------------------------------------------ //
// @ file	 : Game.cpp                                                                             //
// @ brief	 : ゲーム全体を管理するクラス                                                           //
// @ date	 : 2017/06/25                                                                           //
// @ author  : Madoka Nakajima                                                                      //
// @ note	 :                                                                                      //
// @ version : ver.3.00                                                                             //
// ------------------------------------------------------------------------------------------------ // 
/* ヘッダファイルのインクルード */
// 自作ヘッダファイル
#include "Game.h"
/* 名前空間 */
using namespace DirectX::SimpleMath;

// ----------------------------------------------------------------------------------------------- //
// @ brief	: 初期化                                                                               //
// @ param	: int width...クライアント領域の幅                                                     //
// @ param	: int height...クライアント領域の高さ                                                  //
// @ return : なし                                                                                 //
// @ note	:                                                                                      //
// ----------------------------------------------------------------------------------------------- // 
void Game::Initialize(int width, int height)
{
	mClientSizeW = width;
	mClientSizeH = height;
	mScene = new TitleScene();
	mScene->Initialize(mClientSizeW, mClientSizeH);
}

// ----------------------------------------------------------------------------------------------- //
// @ brief	: 更新                                                                                 //
// @ param	: なし                                                                                 //
// @ return : なし　                                                                               //
// @ note	:                                                                                      //
// ----------------------------------------------------------------------------------------------- // 
void Game::Update()
{
	// シーン遷移
	auto returnCode = mScene->Change();
	// シーンが切り替わる状態なら
	if (returnCode != nullptr)
	{
		// 終了処理を呼んで
		mScene->Finalize();
		// シーンを破棄
		delete mScene;
		// 新しくシーンを生成
		mScene = returnCode;
		// 初期化処理を呼ぶ
		mScene->Initialize(mClientSizeW, mClientSizeH);
	}
	// 更新
	mScene->Update();
}

// ----------------------------------------------------------------------------------------------- //
// @ brief	: 描画                                                                                 //
// @ param	: Matrix view...ビュー行列                                                             //
// @ param	: Matrix proj...射影行列                                                               //
// @ return : なし                                                                                 //
// @ note	:                                                                                      //
// ----------------------------------------------------------------------------------------------- // 
void Game::Render(Matrix view, Matrix proj)
{
	mScene->Render();
}

// ----------------------------------------------------------------------------------------------- //
// @ brief	: 終了                                                                                 //
// @ param	: なし                                                                                 //
// @ return : なし                                                                                 //
// @ note	:                                                                                      //
// ----------------------------------------------------------------------------------------------- // 
void Game::Finalize()
{
	mScene->Finalize();
}

